// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum Platform {
  XBOX
  PLAYSTATION
  NINTENDO
  PC
}

enum OrderStatus {
  PENDING
  PREPARING
  SHIPPED
  DELIVERED
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  firstName String
  role      Role      @default(USER)
  password  Password?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders Order[]
}

model Password {
  id             String @id @default(uuid())
  hashedPassword String
  user           User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String @unique
}

model Product {
  id           String   @id @default(uuid())
  name         String
  language     String
  pegi         Int
  description  String   @db.VarChar(1000)
  mainPicture  String?
  price        Decimal
  salePrice    Decimal?
  platform     Platform
  inStock      Int
  pictureOne   String?
  pictureTwo   String?
  pictureThree String?
  pictureFour  String?
  pictureFive  String?

  isActive Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders OrderItem[]
}

model OrderItem {
  id        String  @id @default(uuid())
  productId String?
  orderId   String?
  quantity  Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product? @relation(fields: [productId], references: [id], onDelete: SetNull)
  order   Order?   @relation(fields: [orderId], references: [id], onDelete: SetNull)
}

model Order {
  id            String      @id @default(uuid())
  userId        String?
  totalQuantity Int
  totalPrice    Decimal
  city          String
  street        String
  postalCode    String
  address       String?
  message       String?
  status        OrderStatus @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user  User?       @relation(fields: [userId], references: [id], onDelete: SetNull)
  items OrderItem[]
}

model Banner {
  id      String @id @default(uuid())
  picture String
}
